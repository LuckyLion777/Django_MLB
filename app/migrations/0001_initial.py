# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-05-28 23:42
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_mysql.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge_img', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('name', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BoxScoreMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full', models.BooleanField(default=False)),
                ('GameID', models.IntegerField(blank=True, null=True)),
                ('start_week', models.IntegerField(db_index=True, default=0)),
                ('season_type', models.IntegerField(null=True)),
                ('season', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(default=b'', max_length=150)),
                ('happy_name', models.CharField(default=b'', max_length=150)),
                ('color_primary', models.CharField(blank=True, default=b'', help_text=b'header background color', max_length=30)),
                ('color_secondary', models.CharField(blank=True, default=b'', help_text=b'body text color', max_length=30)),
                ('color_3', models.CharField(blank=True, default=b'', help_text=b'body background color', max_length=30)),
                ('color_4', models.CharField(blank=True, default=b'', help_text=b'header/body divider color', max_length=30)),
                ('color_5', models.CharField(blank=True, default=b'', help_text=b'background color of total pts column', max_length=30)),
                ('color_6', models.CharField(blank=True, default=b'', help_text=b'subtitle color', max_length=30)),
                ('color_7', models.CharField(blank=True, default=b'', help_text=b'color of second subtitle', max_length=30)),
                ('color_lhb', models.CharField(blank=True, default=b'', help_text=b'left header boarder', max_length=30)),
                ('color_rhb', models.CharField(blank=True, default=b'', help_text=b'right header boarder', max_length=30)),
                ('color_lhb_2', models.CharField(blank=True, default=b'', help_text=b'left header boarder for second adv', max_length=30)),
                ('color_rhb_2', models.CharField(blank=True, default=b'', help_text=b'right header boarder for second adv', max_length=30)),
                ('logo_large', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('logo_small', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('header_background', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('header_title', models.CharField(blank=True, default=b'', max_length=100)),
                ('header_title_2', models.CharField(blank=True, default=b'', max_length=100)),
                ('header_title_padding', models.CharField(blank=True, default=b'', max_length=20)),
                ('header_title_2_padding', models.CharField(blank=True, default=b'', max_length=20)),
                ('subtitle', models.CharField(blank=True, default=b'', max_length=100)),
                ('subtitle_2', models.CharField(blank=True, default=b'', help_text=b'', max_length=100)),
                ('footer_text', models.CharField(blank=True, default=b'', max_length=100)),
                ('page_ad', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('page_ad_2', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('page_ad_3', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('page_ad_4', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('page_ad_style', models.CharField(blank=True, default=b'', help_text=b'full-page banner background', max_length=255)),
                ('promo_blurb', models.TextField(blank=True)),
                ('show_quadbox', models.BooleanField(default=False)),
                ('dark_fonts', models.BooleanField(default=False)),
                ('quadbox_img', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('min_age_to_play', models.IntegerField(default=18)),
                ('location_required', models.BooleanField(default=False)),
                ('prize_1', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('prize_2', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('prize_3', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('advertisement', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('advertisement_2', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('leader_header_advertisement', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('leader_header_advertisement_2', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('advertisement_uri', models.URLField(blank=True)),
                ('advertisement_uri_2', models.URLField(blank=True)),
                ('prize_top_label_1', models.CharField(blank=True, default=b'Top 10%', max_length=150)),
                ('prize_top_label_2', models.CharField(blank=True, default=b'Next 40%', max_length=150)),
                ('prize_top_label_3', models.CharField(blank=True, default=b'Everyone Else', max_length=150)),
                ('prize_label_1', models.CharField(blank=True, default=b'', max_length=150)),
                ('prize_label_2', models.CharField(blank=True, default=b'', max_length=150)),
                ('prize_label_3', models.CharField(blank=True, default=b'', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='DfsSlateGameMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SlateGameID', models.IntegerField(blank=True, null=True)),
                ('SlateID', models.IntegerField()),
                ('GameID', models.IntegerField(blank=True, null=True)),
                ('OperatorGameID', models.IntegerField(blank=True, null=True)),
                ('RemovedByOperator', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='DfsSlateMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SlateID', models.IntegerField(blank=True, null=True)),
                ('Operator', models.CharField(blank=True, max_length=50, null=True)),
                ('OperatorSlateID', models.IntegerField(blank=True, null=True)),
                ('OperatorName', models.CharField(blank=True, max_length=50, null=True)),
                ('OperatorDay', models.DateTimeField(blank=True, null=True)),
                ('OperatorStartTime', models.DateTimeField(blank=True, null=True)),
                ('NumberOfGames', models.IntegerField(blank=True, null=True)),
                ('IsMultiDaySlate', models.BooleanField(default=0)),
                ('RemovedByOperator', models.BooleanField(default=0)),
                ('OperatorGameType', models.CharField(blank=True, max_length=50, null=True)),
                ('DfsSlateGames', models.ManyToManyField(to='app.DfsSlateGameMLB')),
            ],
        ),
        migrations.CreateModel(
            name='DfsSlatePlayerMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SlatePlayerID', models.IntegerField(blank=True, null=True)),
                ('SlateID', models.IntegerField()),
                ('SlateGameID', models.IntegerField(blank=True, null=True)),
                ('PlayerID', models.IntegerField(blank=True, null=True)),
                ('PlayerGameProjectionStatID', models.IntegerField(blank=True, null=True)),
                ('OperatorPlayerID', models.CharField(blank=True, max_length=50, null=True)),
                ('OperatorSlatePlayerID', models.CharField(blank=True, max_length=50, null=True)),
                ('OperatorPlayerName', models.CharField(blank=True, max_length=50, null=True)),
                ('OperatorPosition', models.CharField(blank=True, max_length=10, null=True)),
                ('OperatorSalary', models.IntegerField(blank=True, null=True)),
                ('OperatorRosterSlots', django_mysql.models.JSONField(default=dict)),
                ('RemovedByOperator', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='FenceState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('inside', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('GameKey', models.IntegerField(default=0)),
                ('Date', models.DateTimeField(blank=True, null=True)),
                ('AwayTeam', models.CharField(default=b'', max_length=3)),
                ('HomeTeam', models.CharField(default=b'', max_length=3)),
                ('SeasonType', models.CharField(default=b'', max_length=1)),
                ('Season', models.CharField(default=b'', max_length=4)),
                ('Week', models.CharField(default=b'', max_length=4)),
                ('Stadium', models.CharField(blank=True, default=b'', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GameMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GameID', models.IntegerField(blank=True, null=True)),
                ('Season', models.IntegerField()),
                ('SeasonType', models.IntegerField()),
                ('Status', models.CharField(blank=True, max_length=20, null=True)),
                ('Day', models.DateTimeField(blank=True, null=True)),
                ('DateTime', models.DateTimeField(blank=True, null=True)),
                ('AwayTeam', models.CharField(default=b'', max_length=10)),
                ('HomeTeam', models.CharField(default=b'', max_length=10)),
                ('AwayTeamID', models.IntegerField(blank=True, null=True)),
                ('HomeTeamID', models.IntegerField(blank=True, null=True)),
                ('GlobalTeamID', models.IntegerField(blank=True, null=True)),
                ('RescheduledGameID', models.IntegerField(blank=True, null=True)),
                ('StadiumID', models.IntegerField(blank=True, null=True)),
                ('Channel', models.CharField(blank=True, max_length=10, null=True)),
                ('Inning', models.IntegerField(blank=True, null=True)),
                ('InningHalf', models.CharField(blank=True, max_length=1, null=True)),
                ('AwayTeamRuns', models.IntegerField(blank=True, null=True)),
                ('HomeTeamRuns', models.IntegerField(blank=True, null=True)),
                ('AwayTeamHits', models.IntegerField(blank=True, null=True)),
                ('HomeTeamHits', models.IntegerField(blank=True, null=True)),
                ('AwayTeamErrors', models.IntegerField(blank=True, null=True)),
                ('HomeTeamErrors', models.IntegerField(blank=True, null=True)),
                ('WinningPitcherID', models.IntegerField(blank=True, null=True)),
                ('LosingPitcherID', models.IntegerField(blank=True, null=True)),
                ('SavingPitcherID', models.IntegerField(blank=True, null=True)),
                ('Attendance', models.IntegerField(blank=True, null=True)),
                ('AwayTeamProbablePitcherID', models.IntegerField(blank=True, null=True)),
                ('HomeTeamProbablePitcherID', models.IntegerField(blank=True, null=True)),
                ('Outs', models.IntegerField(blank=True, null=True)),
                ('Balls', models.IntegerField(blank=True, null=True)),
                ('Strikes', models.IntegerField(blank=True, null=True)),
                ('CurrentPitcherID', models.IntegerField(blank=True, null=True)),
                ('CurrentHitterID', models.IntegerField(blank=True, null=True)),
                ('AwayTeamStartingPitcherID', models.IntegerField(blank=True, null=True)),
                ('HomeTeamStartingPitcherID', models.IntegerField(blank=True, null=True)),
                ('CurrentPitchingTeamID', models.IntegerField(blank=True, null=True)),
                ('CurrentHittingTeamID', models.IntegerField(blank=True, null=True)),
                ('PointSpread', models.FloatField(blank=True, null=True)),
                ('OverUnder', models.FloatField(blank=True, null=True)),
                ('AwayTeamMoneyLine', models.IntegerField(blank=True, null=True)),
                ('HomeTeamMoneyLine', models.IntegerField(blank=True, null=True)),
                ('ForecastTempLow', models.IntegerField(blank=True, null=True)),
                ('ForecastTempHigh', models.IntegerField(blank=True, null=True)),
                ('ForecastDescription', models.CharField(blank=True, max_length=50, null=True)),
                ('ForecastWindChill', models.IntegerField(blank=True, null=True)),
                ('ForecastWindSpeed', models.IntegerField(blank=True, null=True)),
                ('ForecastWindDirection', models.IntegerField(blank=True, null=True)),
                ('RescheduledFromGameID', models.IntegerField(blank=True, null=True)),
                ('RunnerOnFirst', models.NullBooleanField()),
                ('RunnerOnSecond', models.NullBooleanField()),
                ('RunnerOnThird', models.NullBooleanField()),
                ('AwayTeamStartingPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('HomeTeamStartingPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('CurrentPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('CurrentHitter', models.CharField(blank=True, max_length=50, null=True)),
                ('WinningPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('LosingPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('SavingPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('DueUpHitterID1', models.IntegerField(blank=True, null=True)),
                ('DueUpHitterID2', models.IntegerField(blank=True, null=True)),
                ('DueUpHitterID3', models.IntegerField(blank=True, null=True)),
                ('GlobalGameID', models.IntegerField(blank=True, null=True)),
                ('GlobalAwayTeamID', models.IntegerField(blank=True, null=True)),
                ('GlobalHomeTeamID', models.IntegerField(blank=True, null=True)),
                ('PointSpreadAwayTeamMoneyLine', models.IntegerField(blank=True, null=True)),
                ('PointSpreadHomeTeamMoneyLine', models.IntegerField(blank=True, null=True)),
                ('LastPlay', models.CharField(blank=True, max_length=250, null=True)),
                ('IsClosed', models.BooleanField(default=0)),
                ('Updated', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GEOFence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=b'My Fence', max_length=40)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('enter_msg', models.CharField(blank=True, default=b'', max_length=100)),
                ('exit_msg', models.CharField(blank=True, default=b'', max_length=100)),
                ('profiles', models.ManyToManyField(to='app.CustomerProfile')),
            ],
        ),
        migrations.CreateModel(
            name='InningMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InningID', models.IntegerField(blank=True, null=True)),
                ('GameID', models.IntegerField()),
                ('InningNumber', models.IntegerField()),
                ('AwayTeamRuns', models.IntegerField(blank=True, null=True)),
                ('HomeTeamRuns', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True)),
                ('address', models.CharField(max_length=100, verbose_name=b'Email Address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NewsID', models.IntegerField()),
                ('Updated', models.DateTimeField()),
                ('Title', models.CharField(blank=True, default=b'', max_length=200)),
                ('Content', models.TextField()),
                ('PlayerID', models.IntegerField(blank=True, null=True)),
                ('TeamID', models.IntegerField(blank=True, null=True)),
                ('Team', models.CharField(blank=True, max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewsMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NewsID', models.IntegerField(blank=True, null=True)),
                ('Source', models.CharField(blank=True, max_length=50, null=True)),
                ('Updated', models.DateTimeField(blank=True, null=True)),
                ('TimeAgo', models.CharField(blank=True, max_length=50, null=True)),
                ('Title', models.CharField(blank=True, max_length=100, null=True)),
                ('Content', models.CharField(blank=True, max_length=5000, null=True)),
                ('Url', models.CharField(blank=True, max_length=250, null=True)),
                ('TermsOfUse', models.CharField(blank=True, max_length=500, null=True)),
                ('Author', models.CharField(blank=True, max_length=50, null=True)),
                ('Categories', models.CharField(blank=True, max_length=100, null=True)),
                ('PlayerID', models.IntegerField(blank=True, null=True)),
                ('TeamID', models.IntegerField(blank=True, null=True)),
                ('Team', models.CharField(blank=True, max_length=10, null=True)),
                ('PlayerID2', models.IntegerField(blank=True, null=True)),
                ('TeamID2', models.IntegerField(blank=True, null=True)),
                ('Team2', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pick',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('ordinal', models.IntegerField(default=1)),
                ('session_week', models.IntegerField(db_index=True, default=1)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerGameMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatID', models.IntegerField(blank=True, null=True)),
                ('TeamID', models.IntegerField(blank=True, null=True)),
                ('PlayerID', models.IntegerField(blank=True, null=True)),
                ('SeasonType', models.IntegerField(blank=True, null=True)),
                ('Season', models.IntegerField(blank=True, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Team', models.CharField(blank=True, max_length=10, null=True)),
                ('Position', models.CharField(blank=True, max_length=10, null=True)),
                ('PositionCategory', models.CharField(blank=True, max_length=10, null=True)),
                ('Started', models.IntegerField(blank=True, null=True)),
                ('BattingOrder', models.IntegerField(blank=True, null=True)),
                ('FanDuelSalary', models.IntegerField(blank=True, null=True)),
                ('DraftKingsSalary', models.IntegerField(blank=True, null=True)),
                ('FantasyDataSalary', models.IntegerField(blank=True, null=True)),
                ('YahooSalary', models.IntegerField(blank=True, null=True)),
                ('InjuryStatus', models.CharField(blank=True, max_length=50, null=True)),
                ('InjuryBodyPart', models.CharField(blank=True, max_length=50, null=True)),
                ('InjuryStartDate', models.DateTimeField(blank=True, null=True)),
                ('InjuryNotes', models.CharField(blank=True, max_length=250, null=True)),
                ('FanDuelPosition', models.CharField(blank=True, max_length=10, null=True)),
                ('DraftKingsPosition', models.CharField(blank=True, max_length=10, null=True)),
                ('YahooPosition', models.CharField(blank=True, max_length=10, null=True)),
                ('OpponentRank', models.IntegerField(blank=True, null=True)),
                ('OpponentPositionRank', models.IntegerField(blank=True, null=True)),
                ('GlobalTeamID', models.IntegerField(blank=True, null=True)),
                ('FantasyDraftSalary', models.IntegerField(blank=True, null=True)),
                ('FantasyDraftPosition', models.CharField(blank=True, max_length=10, null=True)),
                ('GameID', models.IntegerField(blank=True, null=True)),
                ('OpponentID', models.IntegerField(blank=True, null=True)),
                ('Opponent', models.CharField(blank=True, max_length=10, null=True)),
                ('Day', models.DateTimeField(blank=True, null=True)),
                ('DateTime', models.DateTimeField(blank=True, null=True)),
                ('HomeOrAway', models.CharField(blank=True, max_length=4, null=True)),
                ('IsGameOver', models.BooleanField(default=0)),
                ('GlobalGameID', models.IntegerField(blank=True, null=True)),
                ('GlobalOpponentID', models.IntegerField(blank=True, null=True)),
                ('Updated', models.DateTimeField(blank=True, null=True)),
                ('Games', models.IntegerField(blank=True, null=True)),
                ('FantasyPoints', models.FloatField(blank=True, null=True)),
                ('AtBats', models.FloatField(blank=True, null=True)),
                ('Runs', models.FloatField(blank=True, null=True)),
                ('Hits', models.FloatField(blank=True, null=True)),
                ('Singles', models.FloatField(blank=True, null=True)),
                ('Doubles', models.FloatField(blank=True, null=True)),
                ('Triples', models.FloatField(blank=True, null=True)),
                ('HomeRuns', models.FloatField(blank=True, null=True)),
                ('RunsBattedIn', models.FloatField(blank=True, null=True)),
                ('BattingAverage', models.FloatField(blank=True, null=True)),
                ('Outs', models.FloatField(blank=True, null=True)),
                ('Strikeouts', models.FloatField(blank=True, null=True)),
                ('Walks', models.FloatField(blank=True, null=True)),
                ('HitByPitch', models.FloatField(blank=True, null=True)),
                ('Sacrifices', models.FloatField(blank=True, null=True)),
                ('SacrificeFlies', models.FloatField(blank=True, null=True)),
                ('GroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('StolenBases', models.FloatField(blank=True, null=True)),
                ('CaughtStealing', models.FloatField(blank=True, null=True)),
                ('PitchesSeen', models.FloatField(blank=True, null=True)),
                ('OnBasePercentage', models.FloatField(blank=True, null=True)),
                ('SluggingPercentage', models.FloatField(blank=True, null=True)),
                ('OnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('Errors', models.FloatField(blank=True, null=True)),
                ('Wins', models.FloatField(blank=True, null=True)),
                ('Losses', models.FloatField(blank=True, null=True)),
                ('Saves', models.FloatField(blank=True, null=True)),
                ('InningsPitchedDecimal', models.FloatField(blank=True, null=True)),
                ('TotalOutsPitched', models.FloatField(blank=True, null=True)),
                ('InningsPitchedFull', models.FloatField(blank=True, null=True)),
                ('InningsPitchedOuts', models.FloatField(blank=True, null=True)),
                ('EarnedRunAverage', models.FloatField(blank=True, null=True)),
                ('PitchingHits', models.FloatField(blank=True, null=True)),
                ('PitchingRuns', models.FloatField(blank=True, null=True)),
                ('PitchingEarnedRuns', models.FloatField(blank=True, null=True)),
                ('PitchingWalks', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeouts', models.FloatField(blank=True, null=True)),
                ('PitchingHomeRuns', models.FloatField(blank=True, null=True)),
                ('PitchesThrown', models.FloatField(blank=True, null=True)),
                ('PitchesThrownStrikes', models.FloatField(blank=True, null=True)),
                ('WalksHitsPerInningsPitched', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageAgainst', models.FloatField(blank=True, null=True)),
                ('GrandSlams', models.FloatField(blank=True, null=True)),
                ('FantasyPointsFanDuel', models.FloatField(blank=True, null=True)),
                ('FantasyPointsDraftKings', models.FloatField(blank=True, null=True)),
                ('FantasyPointsYahoo', models.FloatField(blank=True, null=True)),
                ('PlateAppearances', models.FloatField(blank=True, null=True)),
                ('TotalBases', models.FloatField(blank=True, null=True)),
                ('FlyOuts', models.FloatField(blank=True, null=True)),
                ('GroundOuts', models.FloatField(blank=True, null=True)),
                ('LineOuts', models.FloatField(blank=True, null=True)),
                ('PopOuts', models.FloatField(blank=True, null=True)),
                ('IntentionalWalks', models.FloatField(blank=True, null=True)),
                ('ReachedOnError', models.FloatField(blank=True, null=True)),
                ('BallsInPlay', models.FloatField(blank=True, null=True)),
                ('BattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('WeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSingles', models.FloatField(blank=True, null=True)),
                ('PitchingDoubles', models.FloatField(blank=True, null=True)),
                ('PitchingTriples', models.FloatField(blank=True, null=True)),
                ('PitchingGrandSlams', models.FloatField(blank=True, null=True)),
                ('PitchingHitByPitch', models.FloatField(blank=True, null=True)),
                ('PitchingSacrifices', models.FloatField(blank=True, null=True)),
                ('PitchingSacrificeFlies', models.FloatField(blank=True, null=True)),
                ('PitchingGroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('PitchingCompleteGames', models.FloatField(blank=True, null=True)),
                ('PitchingShutOuts', models.FloatField(blank=True, null=True)),
                ('PitchingNoHitters', models.FloatField(blank=True, null=True)),
                ('PitchingPerfectGames', models.FloatField(blank=True, null=True)),
                ('PitchingPlateAppearances', models.FloatField(blank=True, null=True)),
                ('PitchingTotalBases', models.FloatField(blank=True, null=True)),
                ('PitchingFlyOuts', models.FloatField(blank=True, null=True)),
                ('PitchingGroundOuts', models.FloatField(blank=True, null=True)),
                ('PitchingLineOuts', models.FloatField(blank=True, null=True)),
                ('PitchingPopOuts', models.FloatField(blank=True, null=True)),
                ('PitchingIntentionalWalks', models.FloatField(blank=True, null=True)),
                ('PitchingReachedOnError', models.FloatField(blank=True, null=True)),
                ('PitchingCatchersInterference', models.FloatField(blank=True, null=True)),
                ('PitchingBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSluggingPercentage', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeoutsPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingWalksPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingWeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('DoublePlays', models.FloatField(blank=True, null=True)),
                ('PitchingDoublePlays', models.FloatField(blank=True, null=True)),
                ('BattingOrderConfirmed', models.NullBooleanField()),
                ('IsolatedPower', models.FloatField(blank=True, null=True)),
                ('FieldingIndependentPitching', models.FloatField(blank=True, null=True)),
                ('PitchingQualityStarts', models.FloatField(blank=True, null=True)),
                ('PitchingInningStarted', models.IntegerField(blank=True, null=True)),
                ('LeftOnBase', models.FloatField(blank=True, null=True)),
                ('PitchingHolds', models.FloatField(blank=True, null=True)),
                ('PitchingBlownSaves', models.FloatField(blank=True, null=True)),
                ('SubstituteBattingOrder', models.IntegerField(blank=True, null=True)),
                ('SubstituteBattingOrderSequence', models.IntegerField(blank=True, null=True)),
                ('FantasyPointsFantasyDraft', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerGameProjectionMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatID', models.IntegerField(blank=True, null=True)),
                ('TeamID', models.IntegerField(blank=True, null=True)),
                ('PlayerID', models.IntegerField(blank=True, null=True)),
                ('SeasonType', models.IntegerField(blank=True, null=True)),
                ('Season', models.IntegerField(blank=True, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Team', models.CharField(blank=True, max_length=10, null=True)),
                ('Position', models.CharField(blank=True, max_length=10, null=True)),
                ('PositionCategory', models.CharField(blank=True, max_length=10, null=True)),
                ('Started', models.IntegerField(blank=True, null=True)),
                ('BattingOrder', models.IntegerField(blank=True, null=True)),
                ('FanDuelSalary', models.IntegerField(blank=True, null=True)),
                ('DraftKingsSalary', models.IntegerField(blank=True, null=True)),
                ('FantasyDataSalary', models.IntegerField(blank=True, null=True)),
                ('YahooSalary', models.IntegerField(blank=True, null=True)),
                ('InjuryStatus', models.CharField(blank=True, max_length=50, null=True)),
                ('InjuryBodyPart', models.CharField(blank=True, max_length=50, null=True)),
                ('InjuryStartDate', models.DateTimeField(blank=True, null=True)),
                ('InjuryNotes', models.CharField(blank=True, max_length=250, null=True)),
                ('FanDuelPosition', models.CharField(blank=True, max_length=10, null=True)),
                ('DraftKingsPosition', models.CharField(blank=True, max_length=10, null=True)),
                ('YahooPosition', models.CharField(blank=True, max_length=10, null=True)),
                ('OpponentRank', models.IntegerField(blank=True, null=True)),
                ('OpponentPositionRank', models.IntegerField(blank=True, null=True)),
                ('GlobalTeamID', models.IntegerField(blank=True, null=True)),
                ('FantasyDraftSalary', models.IntegerField(blank=True, null=True)),
                ('FantasyDraftPosition', models.CharField(blank=True, max_length=10, null=True)),
                ('GameID', models.IntegerField(blank=True, null=True)),
                ('OpponentID', models.IntegerField(blank=True, null=True)),
                ('Opponent', models.CharField(blank=True, max_length=10, null=True)),
                ('Day', models.DateTimeField(blank=True, null=True)),
                ('DateTime', models.DateTimeField(blank=True, null=True)),
                ('HomeOrAway', models.CharField(blank=True, max_length=4, null=True)),
                ('IsGameOver', models.BooleanField(default=0)),
                ('GlobalGameID', models.IntegerField(blank=True, null=True)),
                ('GlobalOpponentID', models.IntegerField(blank=True, null=True)),
                ('Updated', models.DateTimeField(blank=True, null=True)),
                ('Games', models.IntegerField(blank=True, null=True)),
                ('FantasyPoints', models.FloatField(blank=True, null=True)),
                ('AtBats', models.FloatField(blank=True, null=True)),
                ('Runs', models.FloatField(blank=True, null=True)),
                ('Hits', models.FloatField(blank=True, null=True)),
                ('Singles', models.FloatField(blank=True, null=True)),
                ('Doubles', models.FloatField(blank=True, null=True)),
                ('Triples', models.FloatField(blank=True, null=True)),
                ('HomeRuns', models.FloatField(blank=True, null=True)),
                ('RunsBattedIn', models.FloatField(blank=True, null=True)),
                ('BattingAverage', models.FloatField(blank=True, null=True)),
                ('Outs', models.FloatField(blank=True, null=True)),
                ('Strikeouts', models.FloatField(blank=True, null=True)),
                ('Walks', models.FloatField(blank=True, null=True)),
                ('HitByPitch', models.FloatField(blank=True, null=True)),
                ('Sacrifices', models.FloatField(blank=True, null=True)),
                ('SacrificeFlies', models.FloatField(blank=True, null=True)),
                ('GroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('StolenBases', models.FloatField(blank=True, null=True)),
                ('CaughtStealing', models.FloatField(blank=True, null=True)),
                ('PitchesSeen', models.FloatField(blank=True, null=True)),
                ('OnBasePercentage', models.FloatField(blank=True, null=True)),
                ('SluggingPercentage', models.FloatField(blank=True, null=True)),
                ('OnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('Errors', models.FloatField(blank=True, null=True)),
                ('Wins', models.FloatField(blank=True, null=True)),
                ('Losses', models.FloatField(blank=True, null=True)),
                ('Saves', models.FloatField(blank=True, null=True)),
                ('InningsPitchedDecimal', models.FloatField(blank=True, null=True)),
                ('TotalOutsPitched', models.FloatField(blank=True, null=True)),
                ('InningsPitchedFull', models.FloatField(blank=True, null=True)),
                ('InningsPitchedOuts', models.FloatField(blank=True, null=True)),
                ('EarnedRunAverage', models.FloatField(blank=True, null=True)),
                ('PitchingHits', models.FloatField(blank=True, null=True)),
                ('PitchingRuns', models.FloatField(blank=True, null=True)),
                ('PitchingEarnedRuns', models.FloatField(blank=True, null=True)),
                ('PitchingWalks', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeouts', models.FloatField(blank=True, null=True)),
                ('PitchingHomeRuns', models.FloatField(blank=True, null=True)),
                ('PitchesThrown', models.FloatField(blank=True, null=True)),
                ('PitchesThrownStrikes', models.FloatField(blank=True, null=True)),
                ('WalksHitsPerInningsPitched', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageAgainst', models.FloatField(blank=True, null=True)),
                ('GrandSlams', models.FloatField(blank=True, null=True)),
                ('FantasyPointsFanDuel', models.FloatField(blank=True, null=True)),
                ('FantasyPointsDraftKings', models.FloatField(blank=True, null=True)),
                ('FantasyPointsYahoo', models.FloatField(blank=True, null=True)),
                ('PlateAppearances', models.FloatField(blank=True, null=True)),
                ('TotalBases', models.FloatField(blank=True, null=True)),
                ('FlyOuts', models.FloatField(blank=True, null=True)),
                ('GroundOuts', models.FloatField(blank=True, null=True)),
                ('LineOuts', models.FloatField(blank=True, null=True)),
                ('PopOuts', models.FloatField(blank=True, null=True)),
                ('IntentionalWalks', models.FloatField(blank=True, null=True)),
                ('ReachedOnError', models.FloatField(blank=True, null=True)),
                ('BallsInPlay', models.FloatField(blank=True, null=True)),
                ('BattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('WeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSingles', models.FloatField(blank=True, null=True)),
                ('PitchingDoubles', models.FloatField(blank=True, null=True)),
                ('PitchingTriples', models.FloatField(blank=True, null=True)),
                ('PitchingGrandSlams', models.FloatField(blank=True, null=True)),
                ('PitchingHitByPitch', models.FloatField(blank=True, null=True)),
                ('PitchingSacrifices', models.FloatField(blank=True, null=True)),
                ('PitchingSacrificeFlies', models.FloatField(blank=True, null=True)),
                ('PitchingGroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('PitchingCompleteGames', models.FloatField(blank=True, null=True)),
                ('PitchingShutOuts', models.FloatField(blank=True, null=True)),
                ('PitchingNoHitters', models.FloatField(blank=True, null=True)),
                ('PitchingPerfectGames', models.FloatField(blank=True, null=True)),
                ('PitchingPlateAppearances', models.FloatField(blank=True, null=True)),
                ('PitchingTotalBases', models.FloatField(blank=True, null=True)),
                ('PitchingFlyOuts', models.FloatField(blank=True, null=True)),
                ('PitchingGroundOuts', models.FloatField(blank=True, null=True)),
                ('PitchingLineOuts', models.FloatField(blank=True, null=True)),
                ('PitchingPopOuts', models.FloatField(blank=True, null=True)),
                ('PitchingIntentionalWalks', models.FloatField(blank=True, null=True)),
                ('PitchingReachedOnError', models.FloatField(blank=True, null=True)),
                ('PitchingCatchersInterference', models.FloatField(blank=True, null=True)),
                ('PitchingBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSluggingPercentage', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeoutsPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingWalksPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingWeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('DoublePlays', models.FloatField(blank=True, null=True)),
                ('PitchingDoublePlays', models.FloatField(blank=True, null=True)),
                ('BattingOrderConfirmed', models.BooleanField(default=0)),
                ('IsolatedPower', models.FloatField(blank=True, null=True)),
                ('FieldingIndependentPitching', models.FloatField(blank=True, null=True)),
                ('PitchingQualityStarts', models.FloatField(blank=True, null=True)),
                ('PitchingInningStarted', models.IntegerField(blank=True, null=True)),
                ('LeftOnBase', models.FloatField(blank=True, null=True)),
                ('PitchingHolds', models.FloatField(blank=True, null=True)),
                ('PitchingBlownSaves', models.FloatField(blank=True, null=True)),
                ('SubstituteBattingOrder', models.IntegerField(blank=True, null=True)),
                ('SubstituteBattingOrderSequence', models.IntegerField(blank=True, null=True)),
                ('FantasyPointsFantasyDraft', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PlayerID', models.IntegerField(blank=True, null=True)),
                ('SportsDataID', models.CharField(blank=True, max_length=50, null=True)),
                ('Status', models.CharField(blank=True, max_length=50, null=True)),
                ('TeamID', models.IntegerField(blank=True, null=True)),
                ('Team', models.CharField(blank=True, max_length=10, null=True)),
                ('Jersey', models.IntegerField(blank=True, null=True)),
                ('PositionCategory', models.CharField(blank=True, max_length=10, null=True)),
                ('Position', models.CharField(blank=True, max_length=10, null=True)),
                ('MLBAMID', models.IntegerField(blank=True, null=True)),
                ('FirstName', models.CharField(blank=True, max_length=50, null=True)),
                ('LastName', models.CharField(blank=True, max_length=50, null=True)),
                ('BatHand', models.CharField(blank=True, max_length=1, null=True)),
                ('ThrowHand', models.CharField(blank=True, max_length=1, null=True)),
                ('Height', models.IntegerField(blank=True, null=True)),
                ('Weight', models.IntegerField(blank=True, null=True)),
                ('BirthDate', models.DateTimeField(blank=True, null=True)),
                ('BirthCity', models.CharField(blank=True, max_length=50, null=True)),
                ('BirthState', models.CharField(blank=True, max_length=50, null=True)),
                ('BirthCountry', models.CharField(blank=True, max_length=50, null=True)),
                ('HighSchool', models.CharField(blank=True, max_length=50, null=True)),
                ('College', models.CharField(blank=True, max_length=50, null=True)),
                ('ProDebut', models.DateTimeField(blank=True, null=True)),
                ('Salary', models.IntegerField(blank=True, null=True)),
                ('PhotoUrl', models.CharField(blank=True, max_length=250, null=True)),
                ('SportRadarPlayerID', models.CharField(blank=True, max_length=50, null=True)),
                ('RotoworldPlayerID', models.IntegerField(blank=True, null=True)),
                ('RotoWirePlayerID', models.IntegerField(blank=True, null=True)),
                ('FantasyAlarmPlayerID', models.IntegerField(blank=True, null=True)),
                ('StatsPlayerID', models.IntegerField(blank=True, null=True)),
                ('SportsDirectPlayerID', models.IntegerField(blank=True, null=True)),
                ('XmlTeamPlayerID', models.IntegerField(blank=True, null=True)),
                ('InjuryStatus', models.CharField(blank=True, max_length=50, null=True)),
                ('InjuryBodyPart', models.CharField(blank=True, max_length=50, null=True)),
                ('InjuryStartDate', models.DateTimeField(blank=True, null=True)),
                ('InjuryNotes', models.CharField(blank=True, max_length=250, null=True)),
                ('FanDuelPlayerID', models.IntegerField(blank=True, null=True)),
                ('DraftKingsPlayerID', models.IntegerField(blank=True, null=True)),
                ('YahooPlayerID', models.IntegerField(blank=True, null=True)),
                ('UpcomingGameID', models.IntegerField(blank=True, null=True)),
                ('FanDuelName', models.CharField(blank=True, max_length=50, null=True)),
                ('DraftKingsName', models.CharField(blank=True, max_length=50, null=True)),
                ('YahooName', models.CharField(blank=True, max_length=50, null=True)),
                ('GlobalTeamID', models.IntegerField(blank=True, null=True)),
                ('FantasyDraftName', models.CharField(blank=True, max_length=50, null=True)),
                ('FantasyDraftPlayerID', models.IntegerField(blank=True, null=True)),
                ('Experience', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerSeasonMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatID', models.IntegerField(blank=True, null=True)),
                ('TeamID', models.IntegerField(blank=True, null=True)),
                ('PlayerID', models.IntegerField(blank=True, null=True)),
                ('SeasonType', models.IntegerField(blank=True, null=True)),
                ('Season', models.IntegerField(blank=True, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Team', models.CharField(blank=True, max_length=10, null=True)),
                ('Position', models.CharField(blank=True, max_length=10, null=True)),
                ('PositionCategory', models.CharField(blank=True, max_length=10, null=True)),
                ('Started', models.IntegerField(blank=True, null=True)),
                ('BattingOrder', models.IntegerField(blank=True, null=True)),
                ('GlobalTeamID', models.IntegerField(blank=True, null=True)),
                ('AverageDraftPosition', models.FloatField(blank=True, null=True)),
                ('Updated', models.DateTimeField(blank=True, null=True)),
                ('Games', models.IntegerField(blank=True, null=True)),
                ('FantasyPoints', models.FloatField(blank=True, null=True)),
                ('AtBats', models.FloatField(blank=True, null=True)),
                ('Runs', models.FloatField(blank=True, null=True)),
                ('Hits', models.FloatField(blank=True, null=True)),
                ('Singles', models.FloatField(blank=True, null=True)),
                ('Doubles', models.FloatField(blank=True, null=True)),
                ('Triples', models.FloatField(blank=True, null=True)),
                ('HomeRuns', models.FloatField(blank=True, null=True)),
                ('RunsBattedIn', models.FloatField(blank=True, null=True)),
                ('BattingAverage', models.FloatField(blank=True, null=True)),
                ('Outs', models.FloatField(blank=True, null=True)),
                ('Strikeouts', models.FloatField(blank=True, null=True)),
                ('Walks', models.FloatField(blank=True, null=True)),
                ('HitByPitch', models.FloatField(blank=True, null=True)),
                ('Sacrifices', models.FloatField(blank=True, null=True)),
                ('SacrificeFlies', models.FloatField(blank=True, null=True)),
                ('GroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('StolenBases', models.FloatField(blank=True, null=True)),
                ('CaughtStealing', models.FloatField(blank=True, null=True)),
                ('PitchesSeen', models.FloatField(blank=True, null=True)),
                ('OnBasePercentage', models.FloatField(blank=True, null=True)),
                ('SluggingPercentage', models.FloatField(blank=True, null=True)),
                ('OnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('Errors', models.FloatField(blank=True, null=True)),
                ('Wins', models.FloatField(blank=True, null=True)),
                ('Losses', models.FloatField(blank=True, null=True)),
                ('Saves', models.FloatField(blank=True, null=True)),
                ('InningsPitchedDecimal', models.FloatField(blank=True, null=True)),
                ('TotalOutsPitched', models.FloatField(blank=True, null=True)),
                ('InningsPitchedFull', models.FloatField(blank=True, null=True)),
                ('InningsPitchedOuts', models.FloatField(blank=True, null=True)),
                ('EarnedRunAverage', models.FloatField(blank=True, null=True)),
                ('PitchingHits', models.FloatField(blank=True, null=True)),
                ('PitchingRuns', models.FloatField(blank=True, null=True)),
                ('PitchingEarnedRuns', models.FloatField(blank=True, null=True)),
                ('PitchingWalks', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeouts', models.FloatField(blank=True, null=True)),
                ('PitchingHomeRuns', models.FloatField(blank=True, null=True)),
                ('PitchesThrown', models.FloatField(blank=True, null=True)),
                ('PitchesThrownStrikes', models.FloatField(blank=True, null=True)),
                ('WalksHitsPerInningsPitched', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageAgainst', models.FloatField(blank=True, null=True)),
                ('GrandSlams', models.FloatField(blank=True, null=True)),
                ('FantasyPointsFanDuel', models.FloatField(blank=True, null=True)),
                ('FantasyPointsDraftKings', models.FloatField(blank=True, null=True)),
                ('FantasyPointsYahoo', models.FloatField(blank=True, null=True)),
                ('PlateAppearances', models.FloatField(blank=True, null=True)),
                ('TotalBases', models.FloatField(blank=True, null=True)),
                ('FlyOuts', models.FloatField(blank=True, null=True)),
                ('GroundOuts', models.FloatField(blank=True, null=True)),
                ('LineOuts', models.FloatField(blank=True, null=True)),
                ('PopOuts', models.FloatField(blank=True, null=True)),
                ('IntentionalWalks', models.FloatField(blank=True, null=True)),
                ('ReachedOnError', models.FloatField(blank=True, null=True)),
                ('BallsInPlay', models.FloatField(blank=True, null=True)),
                ('BattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('WeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSingles', models.FloatField(blank=True, null=True)),
                ('PitchingDoubles', models.FloatField(blank=True, null=True)),
                ('PitchingTriples', models.FloatField(blank=True, null=True)),
                ('PitchingGrandSlams', models.FloatField(blank=True, null=True)),
                ('PitchingHitByPitch', models.FloatField(blank=True, null=True)),
                ('PitchingSacrifices', models.FloatField(blank=True, null=True)),
                ('PitchingSacrificeFlies', models.FloatField(blank=True, null=True)),
                ('PitchingGroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('PitchingCompleteGames', models.FloatField(blank=True, null=True)),
                ('PitchingShutOuts', models.FloatField(blank=True, null=True)),
                ('PitchingNoHitters', models.FloatField(blank=True, null=True)),
                ('PitchingPerfectGames', models.FloatField(blank=True, null=True)),
                ('PitchingPlateAppearances', models.FloatField(blank=True, null=True)),
                ('PitchingTotalBases', models.FloatField(blank=True, null=True)),
                ('PitchingFlyOuts', models.FloatField(blank=True, null=True)),
                ('PitchingGroundOuts', models.FloatField(blank=True, null=True)),
                ('PitchingLineOuts', models.FloatField(blank=True, null=True)),
                ('PitchingPopOuts', models.FloatField(blank=True, null=True)),
                ('PitchingIntentionalWalks', models.FloatField(blank=True, null=True)),
                ('PitchingReachedOnError', models.FloatField(blank=True, null=True)),
                ('PitchingCatchersInterference', models.FloatField(blank=True, null=True)),
                ('PitchingBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSluggingPercentage', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeoutsPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingWalksPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingWeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('DoublePlays', models.FloatField(blank=True, null=True)),
                ('PitchingDoublePlays', models.FloatField(blank=True, null=True)),
                ('BattingOrderConfirmed', models.BooleanField(default=0)),
                ('IsolatedPower', models.FloatField(blank=True, null=True)),
                ('FieldingIndependentPitching', models.FloatField(blank=True, null=True)),
                ('PitchingQualityStarts', models.FloatField(blank=True, null=True)),
                ('PitchingInningStarted', models.IntegerField(blank=True, null=True)),
                ('LeftOnBase', models.FloatField(blank=True, null=True)),
                ('PitchingHolds', models.FloatField(blank=True, null=True)),
                ('PitchingBlownSaves', models.FloatField(blank=True, null=True)),
                ('SubstituteBattingOrder', models.IntegerField(blank=True, null=True)),
                ('SubstituteBattingOrderSequence', models.IntegerField(blank=True, null=True)),
                ('FantasyPointsFantasyDraft', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerSeasonProjectionMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatID', models.IntegerField(blank=True, null=True)),
                ('TeamID', models.IntegerField(blank=True, null=True)),
                ('PlayerID', models.IntegerField(blank=True, null=True)),
                ('SeasonType', models.IntegerField(blank=True, null=True)),
                ('Season', models.IntegerField(blank=True, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Team', models.CharField(blank=True, max_length=10, null=True)),
                ('Position', models.CharField(blank=True, max_length=10, null=True)),
                ('PositionCategory', models.CharField(blank=True, max_length=10, null=True)),
                ('Started', models.IntegerField(blank=True, null=True)),
                ('BattingOrder', models.IntegerField(blank=True, null=True)),
                ('GlobalTeamID', models.IntegerField(blank=True, null=True)),
                ('AverageDraftPosition', models.FloatField(blank=True, null=True)),
                ('Updated', models.DateTimeField(blank=True, null=True)),
                ('Games', models.IntegerField(blank=True, null=True)),
                ('FantasyPoints', models.FloatField(blank=True, null=True)),
                ('AtBats', models.FloatField(blank=True, null=True)),
                ('Runs', models.FloatField(blank=True, null=True)),
                ('Hits', models.FloatField(blank=True, null=True)),
                ('Singles', models.FloatField(blank=True, null=True)),
                ('Doubles', models.FloatField(blank=True, null=True)),
                ('Triples', models.FloatField(blank=True, null=True)),
                ('HomeRuns', models.FloatField(blank=True, null=True)),
                ('RunsBattedIn', models.FloatField(blank=True, null=True)),
                ('BattingAverage', models.FloatField(blank=True, null=True)),
                ('Outs', models.FloatField(blank=True, null=True)),
                ('Strikeouts', models.FloatField(blank=True, null=True)),
                ('Walks', models.FloatField(blank=True, null=True)),
                ('HitByPitch', models.FloatField(blank=True, null=True)),
                ('Sacrifices', models.FloatField(blank=True, null=True)),
                ('SacrificeFlies', models.FloatField(blank=True, null=True)),
                ('GroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('StolenBases', models.FloatField(blank=True, null=True)),
                ('CaughtStealing', models.FloatField(blank=True, null=True)),
                ('PitchesSeen', models.FloatField(blank=True, null=True)),
                ('OnBasePercentage', models.FloatField(blank=True, null=True)),
                ('SluggingPercentage', models.FloatField(blank=True, null=True)),
                ('OnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('Errors', models.FloatField(blank=True, null=True)),
                ('Wins', models.FloatField(blank=True, null=True)),
                ('Losses', models.FloatField(blank=True, null=True)),
                ('Saves', models.FloatField(blank=True, null=True)),
                ('InningsPitchedDecimal', models.FloatField(blank=True, null=True)),
                ('TotalOutsPitched', models.FloatField(blank=True, null=True)),
                ('InningsPitchedFull', models.FloatField(blank=True, null=True)),
                ('InningsPitchedOuts', models.FloatField(blank=True, null=True)),
                ('EarnedRunAverage', models.FloatField(blank=True, null=True)),
                ('PitchingHits', models.FloatField(blank=True, null=True)),
                ('PitchingRuns', models.FloatField(blank=True, null=True)),
                ('PitchingEarnedRuns', models.FloatField(blank=True, null=True)),
                ('PitchingWalks', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeouts', models.FloatField(blank=True, null=True)),
                ('PitchingHomeRuns', models.FloatField(blank=True, null=True)),
                ('PitchesThrown', models.FloatField(blank=True, null=True)),
                ('PitchesThrownStrikes', models.FloatField(blank=True, null=True)),
                ('WalksHitsPerInningsPitched', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageAgainst', models.FloatField(blank=True, null=True)),
                ('GrandSlams', models.FloatField(blank=True, null=True)),
                ('FantasyPointsFanDuel', models.FloatField(blank=True, null=True)),
                ('FantasyPointsDraftKings', models.FloatField(blank=True, null=True)),
                ('FantasyPointsYahoo', models.FloatField(blank=True, null=True)),
                ('PlateAppearances', models.FloatField(blank=True, null=True)),
                ('TotalBases', models.FloatField(blank=True, null=True)),
                ('FlyOuts', models.FloatField(blank=True, null=True)),
                ('GroundOuts', models.FloatField(blank=True, null=True)),
                ('LineOuts', models.FloatField(blank=True, null=True)),
                ('PopOuts', models.FloatField(blank=True, null=True)),
                ('IntentionalWalks', models.FloatField(blank=True, null=True)),
                ('ReachedOnError', models.FloatField(blank=True, null=True)),
                ('BallsInPlay', models.FloatField(blank=True, null=True)),
                ('BattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('WeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSingles', models.FloatField(blank=True, null=True)),
                ('PitchingDoubles', models.FloatField(blank=True, null=True)),
                ('PitchingTriples', models.FloatField(blank=True, null=True)),
                ('PitchingGrandSlams', models.FloatField(blank=True, null=True)),
                ('PitchingHitByPitch', models.FloatField(blank=True, null=True)),
                ('PitchingSacrifices', models.FloatField(blank=True, null=True)),
                ('PitchingSacrificeFlies', models.FloatField(blank=True, null=True)),
                ('PitchingGroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('PitchingCompleteGames', models.FloatField(blank=True, null=True)),
                ('PitchingShutOuts', models.FloatField(blank=True, null=True)),
                ('PitchingNoHitters', models.FloatField(blank=True, null=True)),
                ('PitchingPerfectGames', models.FloatField(blank=True, null=True)),
                ('PitchingPlateAppearances', models.FloatField(blank=True, null=True)),
                ('PitchingTotalBases', models.FloatField(blank=True, null=True)),
                ('PitchingFlyOuts', models.FloatField(blank=True, null=True)),
                ('PitchingGroundOuts', models.FloatField(blank=True, null=True)),
                ('PitchingLineOuts', models.FloatField(blank=True, null=True)),
                ('PitchingPopOuts', models.FloatField(blank=True, null=True)),
                ('PitchingIntentionalWalks', models.FloatField(blank=True, null=True)),
                ('PitchingReachedOnError', models.FloatField(blank=True, null=True)),
                ('PitchingCatchersInterference', models.FloatField(blank=True, null=True)),
                ('PitchingBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSluggingPercentage', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeoutsPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingWalksPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingWeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('DoublePlays', models.FloatField(blank=True, null=True)),
                ('PitchingDoublePlays', models.FloatField(blank=True, null=True)),
                ('BattingOrderConfirmed', models.NullBooleanField()),
                ('IsolatedPower', models.FloatField(blank=True, null=True)),
                ('FieldingIndependentPitching', models.FloatField(blank=True, null=True)),
                ('PitchingQualityStarts', models.FloatField(blank=True, null=True)),
                ('PitchingInningStarted', models.IntegerField(blank=True, null=True)),
                ('LeftOnBase', models.FloatField(blank=True, null=True)),
                ('PitchingHolds', models.FloatField(blank=True, null=True)),
                ('PitchingBlownSaves', models.FloatField(blank=True, null=True)),
                ('SubstituteBattingOrder', models.IntegerField(blank=True, null=True)),
                ('SubstituteBattingOrderSequence', models.IntegerField(blank=True, null=True)),
                ('FantasyPointsFantasyDraft', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.DecimalField(decimal_places=15, max_digits=24)),
                ('y', models.DecimalField(decimal_places=15, max_digits=24)),
                ('order', models.IntegerField()),
                ('fence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.GEOFence')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GameID', models.IntegerField(blank=True, null=True)),
                ('Season', models.IntegerField()),
                ('SeasonType', models.IntegerField()),
                ('Status', models.CharField(blank=True, max_length=20, null=True)),
                ('Day', models.DateTimeField(blank=True, null=True)),
                ('DateTime', models.DateTimeField(blank=True, null=True)),
                ('AwayTeam', models.CharField(default=b'', max_length=10)),
                ('HomeTeam', models.CharField(default=b'', max_length=10)),
                ('AwayTeamID', models.IntegerField(blank=True, null=True)),
                ('HomeTeamID', models.IntegerField(blank=True, null=True)),
                ('GlobalTeamID', models.IntegerField(blank=True, null=True)),
                ('RescheduledGameID', models.IntegerField(blank=True, null=True)),
                ('StadiumID', models.IntegerField(blank=True, null=True)),
                ('Channel', models.CharField(blank=True, max_length=100, null=True)),
                ('Inning', models.IntegerField(blank=True, null=True)),
                ('InningHalf', models.CharField(blank=True, max_length=1, null=True)),
                ('AwayTeamRuns', models.IntegerField(blank=True, null=True)),
                ('HomeTeamRuns', models.IntegerField(blank=True, null=True)),
                ('AwayTeamHits', models.IntegerField(blank=True, null=True)),
                ('HomeTeamHits', models.IntegerField(blank=True, null=True)),
                ('AwayTeamErrors', models.IntegerField(blank=True, null=True)),
                ('HomeTeamErrors', models.IntegerField(blank=True, null=True)),
                ('WinningPitcherID', models.IntegerField(blank=True, null=True)),
                ('LosingPitcherID', models.IntegerField(blank=True, null=True)),
                ('SavingPitcherID', models.IntegerField(blank=True, null=True)),
                ('Attendance', models.IntegerField(blank=True, null=True)),
                ('AwayTeamProbablePitcherID', models.IntegerField(blank=True, null=True)),
                ('HomeTeamProbablePitcherID', models.IntegerField(blank=True, null=True)),
                ('Outs', models.IntegerField(blank=True, null=True)),
                ('Balls', models.IntegerField(blank=True, null=True)),
                ('Strikes', models.IntegerField(blank=True, null=True)),
                ('CurrentPitcherID', models.IntegerField(blank=True, null=True)),
                ('CurrentHitterID', models.IntegerField(blank=True, null=True)),
                ('AwayTeamStartingPitcherID', models.IntegerField(blank=True, null=True)),
                ('HomeTeamStartingPitcherID', models.IntegerField(blank=True, null=True)),
                ('CurrentPitchingTeamID', models.IntegerField(blank=True, null=True)),
                ('CurrentHittingTeamID', models.IntegerField(blank=True, null=True)),
                ('PointSpread', models.FloatField(blank=True, null=True)),
                ('OverUnder', models.FloatField(blank=True, null=True)),
                ('AwayTeamMoneyLine', models.IntegerField(blank=True, null=True)),
                ('HomeTeamMoneyLine', models.IntegerField(blank=True, null=True)),
                ('ForecastTempLow', models.IntegerField(blank=True, null=True)),
                ('ForecastTempHigh', models.IntegerField(blank=True, null=True)),
                ('ForecastDescription', models.CharField(blank=True, max_length=50, null=True)),
                ('ForecastWindChill', models.IntegerField(blank=True, null=True)),
                ('ForecastWindSpeed', models.IntegerField(blank=True, null=True)),
                ('ForecastWindDirection', models.IntegerField(blank=True, null=True)),
                ('RescheduledFromGameID', models.IntegerField(blank=True, null=True)),
                ('RunnerOnFirst', models.NullBooleanField()),
                ('RunnerOnSecond', models.NullBooleanField()),
                ('RunnerOnThird', models.NullBooleanField()),
                ('AwayTeamStartingPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('HomeTeamStartingPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('CurrentPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('CurrentHitter', models.CharField(blank=True, max_length=50, null=True)),
                ('WinningPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('LosingPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('SavingPitcher', models.CharField(blank=True, max_length=50, null=True)),
                ('DueUpHitterID1', models.IntegerField(blank=True, null=True)),
                ('DueUpHitterID2', models.IntegerField(blank=True, null=True)),
                ('DueUpHitterID3', models.IntegerField(blank=True, null=True)),
                ('GlobalGameID', models.IntegerField(blank=True, null=True)),
                ('GlobalAwayTeamID', models.IntegerField(blank=True, null=True)),
                ('GlobalHomeTeamID', models.IntegerField(blank=True, null=True)),
                ('PointSpreadAwayTeamMoneyLine', models.IntegerField(blank=True, null=True)),
                ('PointSpreadHomeTeamMoneyLine', models.IntegerField(blank=True, null=True)),
                ('LastPlay', models.CharField(blank=True, max_length=250, null=True)),
                ('IsClosed', models.BooleanField(default=0)),
                ('Updated', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StadiumMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StadiumID', models.IntegerField()),
                ('Active', models.BooleanField(default=0)),
                ('Name', models.CharField(default=b'', max_length=100)),
                ('City', models.CharField(blank=True, max_length=150, null=True)),
                ('State', models.CharField(blank=True, max_length=50, null=True)),
                ('Country', models.CharField(blank=True, max_length=10, null=True)),
                ('Capacity', models.IntegerField(blank=True, null=True)),
                ('Surface', models.CharField(blank=True, max_length=50, null=True)),
                ('LeftField', models.IntegerField(blank=True, null=True)),
                ('MidLeftField', models.IntegerField(blank=True, null=True)),
                ('LeftCenterField', models.IntegerField(blank=True, null=True)),
                ('MidLeftCenterField', models.IntegerField(blank=True, null=True)),
                ('CenterField', models.IntegerField(blank=True, null=True)),
                ('MidRightCenterField', models.IntegerField(blank=True, null=True)),
                ('RightCenterField', models.IntegerField(blank=True, null=True)),
                ('MidRightField', models.IntegerField(blank=True, null=True)),
                ('RightField', models.IntegerField(blank=True, null=True)),
                ('GeoLat', models.FloatField(blank=True, null=True)),
                ('GeoLong', models.FloatField(blank=True, null=True)),
                ('Altitude', models.IntegerField(blank=True, null=True)),
                ('HomePlateDirection', models.IntegerField(blank=True, null=True)),
                ('Type', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StandingMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Season', models.IntegerField(blank=True, null=True)),
                ('SeasonType', models.IntegerField(blank=True, null=True)),
                ('TeamID', models.IntegerField(blank=True, null=True)),
                ('Key', models.CharField(default=b'', max_length=10)),
                ('City', models.CharField(blank=True, max_length=50, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('League', models.CharField(blank=True, max_length=20, null=True)),
                ('Division', models.CharField(blank=True, max_length=20, null=True)),
                ('Wins', models.IntegerField(blank=True, null=True)),
                ('Losses', models.IntegerField(blank=True, null=True)),
                ('Percentage', models.FloatField(blank=True, null=True)),
                ('DivisionWins', models.IntegerField(blank=True, null=True)),
                ('DivisionLosses', models.IntegerField(blank=True, null=True)),
                ('GamesBehind', models.FloatField(blank=True, null=True)),
                ('LastTenGamesWins', models.IntegerField(blank=True, null=True)),
                ('LastTenGamesLosses', models.IntegerField(blank=True, null=True)),
                ('Streak', models.CharField(default=b'', max_length=10)),
                ('WildCardRank', models.IntegerField(blank=True, null=True)),
                ('WildCardGamesBehind', models.FloatField(blank=True, null=True)),
                ('HomeWins', models.IntegerField(blank=True, null=True)),
                ('HomeLosses', models.IntegerField(blank=True, null=True)),
                ('AwayWins', models.IntegerField(blank=True, null=True)),
                ('AwayLosses', models.IntegerField(blank=True, null=True)),
                ('DayWins', models.IntegerField(blank=True, null=True)),
                ('DayLosses', models.IntegerField(blank=True, null=True)),
                ('NightWins', models.IntegerField(blank=True, null=True)),
                ('NightLosses', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StripeCharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charge_id', models.CharField(default=b'', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='StripeToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=150)),
                ('customer_id', models.CharField(default=b'', max_length=150)),
                ('recipient_id', models.CharField(default=b'', max_length=150)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeamGameMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatID', models.IntegerField(blank=True, null=True)),
                ('TeamID', models.IntegerField(blank=True, null=True)),
                ('SeasonType', models.IntegerField(blank=True, null=True)),
                ('Season', models.IntegerField(blank=True, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Team', models.CharField(blank=True, max_length=10, null=True)),
                ('GlobalTeamID', models.IntegerField(blank=True, null=True)),
                ('GameID', models.IntegerField(blank=True, null=True)),
                ('OpponentID', models.IntegerField(blank=True, null=True)),
                ('Opponent', models.CharField(blank=True, max_length=10, null=True)),
                ('Day', models.DateTimeField(blank=True, null=True)),
                ('DateTime', models.DateTimeField(blank=True, null=True)),
                ('HomeOrAway', models.CharField(blank=True, max_length=4, null=True)),
                ('IsGameOver', models.BooleanField(default=0)),
                ('GlobalGameID', models.IntegerField(blank=True, null=True)),
                ('GlobalOpponentID', models.IntegerField(blank=True, null=True)),
                ('Updated', models.DateTimeField(blank=True, null=True)),
                ('Games', models.IntegerField(blank=True, null=True)),
                ('FantasyPoints', models.FloatField(blank=True, null=True)),
                ('AtBats', models.FloatField(blank=True, null=True)),
                ('Runs', models.FloatField(blank=True, null=True)),
                ('Hits', models.FloatField(blank=True, null=True)),
                ('Singles', models.FloatField(blank=True, null=True)),
                ('Doubles', models.FloatField(blank=True, null=True)),
                ('Triples', models.FloatField(blank=True, null=True)),
                ('HomeRuns', models.FloatField(blank=True, null=True)),
                ('RunsBattedIn', models.FloatField(blank=True, null=True)),
                ('BattingAverage', models.FloatField(blank=True, null=True)),
                ('Outs', models.FloatField(blank=True, null=True)),
                ('Strikeouts', models.FloatField(blank=True, null=True)),
                ('Walks', models.FloatField(blank=True, null=True)),
                ('HitByPitch', models.FloatField(blank=True, null=True)),
                ('Sacrifices', models.FloatField(blank=True, null=True)),
                ('SacrificeFlies', models.FloatField(blank=True, null=True)),
                ('GroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('StolenBases', models.FloatField(blank=True, null=True)),
                ('CaughtStealing', models.FloatField(blank=True, null=True)),
                ('PitchesSeen', models.FloatField(blank=True, null=True)),
                ('OnBasePercentage', models.FloatField(blank=True, null=True)),
                ('SluggingPercentage', models.FloatField(blank=True, null=True)),
                ('OnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('Errors', models.FloatField(blank=True, null=True)),
                ('Wins', models.FloatField(blank=True, null=True)),
                ('Losses', models.FloatField(blank=True, null=True)),
                ('Saves', models.FloatField(blank=True, null=True)),
                ('InningsPitchedDecimal', models.FloatField(blank=True, null=True)),
                ('TotalOutsPitched', models.FloatField(blank=True, null=True)),
                ('InningsPitchedFull', models.FloatField(blank=True, null=True)),
                ('InningsPitchedOuts', models.FloatField(blank=True, null=True)),
                ('EarnedRunAverage', models.FloatField(blank=True, null=True)),
                ('PitchingHits', models.FloatField(blank=True, null=True)),
                ('PitchingRuns', models.FloatField(blank=True, null=True)),
                ('PitchingEarnedRuns', models.FloatField(blank=True, null=True)),
                ('PitchingWalks', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeouts', models.FloatField(blank=True, null=True)),
                ('PitchingHomeRuns', models.FloatField(blank=True, null=True)),
                ('PitchesThrown', models.FloatField(blank=True, null=True)),
                ('PitchesThrownStrikes', models.FloatField(blank=True, null=True)),
                ('WalksHitsPerInningsPitched', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageAgainst', models.FloatField(blank=True, null=True)),
                ('GrandSlams', models.FloatField(blank=True, null=True)),
                ('FantasyPointsFanDuel', models.FloatField(blank=True, null=True)),
                ('FantasyPointsDraftKings', models.FloatField(blank=True, null=True)),
                ('FantasyPointsYahoo', models.FloatField(blank=True, null=True)),
                ('PlateAppearances', models.FloatField(blank=True, null=True)),
                ('TotalBases', models.FloatField(blank=True, null=True)),
                ('FlyOuts', models.FloatField(blank=True, null=True)),
                ('GroundOuts', models.FloatField(blank=True, null=True)),
                ('LineOuts', models.FloatField(blank=True, null=True)),
                ('PopOuts', models.FloatField(blank=True, null=True)),
                ('IntentionalWalks', models.FloatField(blank=True, null=True)),
                ('ReachedOnError', models.FloatField(blank=True, null=True)),
                ('BallsInPlay', models.FloatField(blank=True, null=True)),
                ('BattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('WeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSingles', models.FloatField(blank=True, null=True)),
                ('PitchingDoubles', models.FloatField(blank=True, null=True)),
                ('PitchingTriples', models.FloatField(blank=True, null=True)),
                ('PitchingGrandSlams', models.FloatField(blank=True, null=True)),
                ('PitchingHitByPitch', models.FloatField(blank=True, null=True)),
                ('PitchingSacrifices', models.FloatField(blank=True, null=True)),
                ('PitchingSacrificeFlies', models.FloatField(blank=True, null=True)),
                ('PitchingGroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('PitchingCompleteGames', models.FloatField(blank=True, null=True)),
                ('PitchingShutOuts', models.FloatField(blank=True, null=True)),
                ('PitchingNoHitters', models.FloatField(blank=True, null=True)),
                ('PitchingPerfectGames', models.FloatField(blank=True, null=True)),
                ('PitchingPlateAppearances', models.FloatField(blank=True, null=True)),
                ('PitchingTotalBases', models.FloatField(blank=True, null=True)),
                ('PitchingFlyOuts', models.FloatField(blank=True, null=True)),
                ('PitchingGroundOuts', models.FloatField(blank=True, null=True)),
                ('PitchingLineOuts', models.FloatField(blank=True, null=True)),
                ('PitchingPopOuts', models.FloatField(blank=True, null=True)),
                ('PitchingIntentionalWalks', models.FloatField(blank=True, null=True)),
                ('PitchingReachedOnError', models.FloatField(blank=True, null=True)),
                ('PitchingCatchersInterference', models.FloatField(blank=True, null=True)),
                ('PitchingBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSluggingPercentage', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeoutsPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingWalksPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingWeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('DoublePlays', models.FloatField(blank=True, null=True)),
                ('PitchingDoublePlays', models.FloatField(blank=True, null=True)),
                ('BattingOrderConfirmed', models.NullBooleanField()),
                ('IsolatedPower', models.FloatField(blank=True, null=True)),
                ('FieldingIndependentPitching', models.FloatField(blank=True, null=True)),
                ('PitchingQualityStarts', models.FloatField(blank=True, null=True)),
                ('PitchingInningStarted', models.IntegerField(blank=True, null=True)),
                ('LeftOnBase', models.FloatField(blank=True, null=True)),
                ('PitchingHolds', models.FloatField(blank=True, null=True)),
                ('PitchingBlownSaves', models.FloatField(blank=True, null=True)),
                ('SubstituteBattingOrder', models.IntegerField(blank=True, null=True)),
                ('SubstituteBattingOrderSequence', models.IntegerField(blank=True, null=True)),
                ('FantasyPointsFantasyDraft', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeamMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TeamID', models.IntegerField()),
                ('Key', models.CharField(default=b'', max_length=150)),
                ('Active', models.BooleanField(default=0)),
                ('City', models.CharField(blank=True, max_length=150, null=True)),
                ('Name', models.CharField(blank=True, max_length=150, null=True)),
                ('StadiumID', models.IntegerField(blank=True, null=True)),
                ('League', models.CharField(blank=True, max_length=10, null=True)),
                ('Division', models.CharField(blank=True, max_length=10, null=True)),
                ('PrimaryColor', models.CharField(blank=True, max_length=6, null=True)),
                ('SecondaryColor', models.CharField(blank=True, max_length=6, null=True)),
                ('TertiaryColor', models.CharField(blank=True, max_length=6, null=True)),
                ('QuaternaryColor', models.CharField(blank=True, max_length=6, null=True)),
                ('WikipediaLogoUrl', models.CharField(blank=True, max_length=250, null=True)),
                ('WikipediaWordMarkUrl', models.CharField(blank=True, max_length=250, null=True)),
                ('GlobalTeamID', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeamSeasonMLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatID', models.IntegerField(blank=True, null=True)),
                ('TeamID', models.IntegerField(blank=True, null=True)),
                ('SeasonType', models.IntegerField(blank=True, null=True)),
                ('Season', models.IntegerField(blank=True, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Team', models.CharField(blank=True, max_length=10, null=True)),
                ('GlobalTeamID', models.IntegerField(blank=True, null=True)),
                ('Updated', models.DateTimeField(blank=True, null=True)),
                ('Games', models.IntegerField(blank=True, null=True)),
                ('FantasyPoints', models.FloatField(blank=True, null=True)),
                ('AtBats', models.FloatField(blank=True, null=True)),
                ('Runs', models.FloatField(blank=True, null=True)),
                ('Hits', models.FloatField(blank=True, null=True)),
                ('Singles', models.FloatField(blank=True, null=True)),
                ('Doubles', models.FloatField(blank=True, null=True)),
                ('Triples', models.FloatField(blank=True, null=True)),
                ('HomeRuns', models.FloatField(blank=True, null=True)),
                ('RunsBattedIn', models.FloatField(blank=True, null=True)),
                ('BattingAverage', models.FloatField(blank=True, null=True)),
                ('Outs', models.FloatField(blank=True, null=True)),
                ('Strikeouts', models.FloatField(blank=True, null=True)),
                ('Walks', models.FloatField(blank=True, null=True)),
                ('HitByPitch', models.FloatField(blank=True, null=True)),
                ('Sacrifices', models.FloatField(blank=True, null=True)),
                ('SacrificeFlies', models.FloatField(blank=True, null=True)),
                ('GroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('StolenBases', models.FloatField(blank=True, null=True)),
                ('CaughtStealing', models.FloatField(blank=True, null=True)),
                ('PitchesSeen', models.FloatField(blank=True, null=True)),
                ('OnBasePercentage', models.FloatField(blank=True, null=True)),
                ('SluggingPercentage', models.FloatField(blank=True, null=True)),
                ('OnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('Errors', models.FloatField(blank=True, null=True)),
                ('Wins', models.FloatField(blank=True, null=True)),
                ('Losses', models.FloatField(blank=True, null=True)),
                ('Saves', models.FloatField(blank=True, null=True)),
                ('InningsPitchedDecimal', models.FloatField(blank=True, null=True)),
                ('TotalOutsPitched', models.FloatField(blank=True, null=True)),
                ('InningsPitchedFull', models.FloatField(blank=True, null=True)),
                ('InningsPitchedOuts', models.FloatField(blank=True, null=True)),
                ('EarnedRunAverage', models.FloatField(blank=True, null=True)),
                ('PitchingHits', models.FloatField(blank=True, null=True)),
                ('PitchingRuns', models.FloatField(blank=True, null=True)),
                ('PitchingEarnedRuns', models.FloatField(blank=True, null=True)),
                ('PitchingWalks', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeouts', models.FloatField(blank=True, null=True)),
                ('PitchingHomeRuns', models.FloatField(blank=True, null=True)),
                ('PitchesThrown', models.FloatField(blank=True, null=True)),
                ('PitchesThrownStrikes', models.FloatField(blank=True, null=True)),
                ('WalksHitsPerInningsPitched', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageAgainst', models.FloatField(blank=True, null=True)),
                ('GrandSlams', models.FloatField(blank=True, null=True)),
                ('FantasyPointsFanDuel', models.FloatField(blank=True, null=True)),
                ('FantasyPointsDraftKings', models.FloatField(blank=True, null=True)),
                ('FantasyPointsYahoo', models.FloatField(blank=True, null=True)),
                ('PlateAppearances', models.FloatField(blank=True, null=True)),
                ('TotalBases', models.FloatField(blank=True, null=True)),
                ('FlyOuts', models.FloatField(blank=True, null=True)),
                ('GroundOuts', models.FloatField(blank=True, null=True)),
                ('LineOuts', models.FloatField(blank=True, null=True)),
                ('PopOuts', models.FloatField(blank=True, null=True)),
                ('IntentionalWalks', models.FloatField(blank=True, null=True)),
                ('ReachedOnError', models.FloatField(blank=True, null=True)),
                ('BallsInPlay', models.FloatField(blank=True, null=True)),
                ('BattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('WeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSingles', models.FloatField(blank=True, null=True)),
                ('PitchingDoubles', models.FloatField(blank=True, null=True)),
                ('PitchingTriples', models.FloatField(blank=True, null=True)),
                ('PitchingGrandSlams', models.FloatField(blank=True, null=True)),
                ('PitchingHitByPitch', models.FloatField(blank=True, null=True)),
                ('PitchingSacrifices', models.FloatField(blank=True, null=True)),
                ('PitchingSacrificeFlies', models.FloatField(blank=True, null=True)),
                ('PitchingGroundIntoDoublePlay', models.FloatField(blank=True, null=True)),
                ('PitchingCompleteGames', models.FloatField(blank=True, null=True)),
                ('PitchingShutOuts', models.FloatField(blank=True, null=True)),
                ('PitchingNoHitters', models.FloatField(blank=True, null=True)),
                ('PitchingPerfectGames', models.FloatField(blank=True, null=True)),
                ('PitchingPlateAppearances', models.FloatField(blank=True, null=True)),
                ('PitchingTotalBases', models.FloatField(blank=True, null=True)),
                ('PitchingFlyOuts', models.FloatField(blank=True, null=True)),
                ('PitchingGroundOuts', models.FloatField(blank=True, null=True)),
                ('PitchingLineOuts', models.FloatField(blank=True, null=True)),
                ('PitchingPopOuts', models.FloatField(blank=True, null=True)),
                ('PitchingIntentionalWalks', models.FloatField(blank=True, null=True)),
                ('PitchingReachedOnError', models.FloatField(blank=True, null=True)),
                ('PitchingCatchersInterference', models.FloatField(blank=True, null=True)),
                ('PitchingBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('PitchingSluggingPercentage', models.FloatField(blank=True, null=True)),
                ('PitchingOnBasePlusSlugging', models.FloatField(blank=True, null=True)),
                ('PitchingStrikeoutsPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingWalksPerNineInnings', models.FloatField(blank=True, null=True)),
                ('PitchingBattingAverageOnBallsInPlay', models.FloatField(blank=True, null=True)),
                ('PitchingWeightedOnBasePercentage', models.FloatField(blank=True, null=True)),
                ('DoublePlays', models.FloatField(blank=True, null=True)),
                ('PitchingDoublePlays', models.FloatField(blank=True, null=True)),
                ('BattingOrderConfirmed', models.BooleanField(default=0)),
                ('IsolatedPower', models.FloatField(blank=True, null=True)),
                ('FieldingIndependentPitching', models.FloatField(blank=True, null=True)),
                ('PitchingQualityStarts', models.FloatField(blank=True, null=True)),
                ('PitchingInningStarted', models.IntegerField(blank=True, null=True)),
                ('LeftOnBase', models.FloatField(blank=True, null=True)),
                ('PitchingHolds', models.FloatField(blank=True, null=True)),
                ('PitchingBlownSaves', models.FloatField(blank=True, null=True)),
                ('SubstituteBattingOrder', models.IntegerField(blank=True, null=True)),
                ('SubstituteBattingOrderSequence', models.IntegerField(blank=True, null=True)),
                ('FantasyPointsFantasyDraft', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ThreePak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('GameID', models.IntegerField(blank=True, null=True)),
                ('final_week_1_score', models.FloatField(default=0.0)),
                ('final_points', models.FloatField(default=0.0)),
                ('final_place', models.IntegerField(default=0)),
                ('final_win', models.FloatField(default=0.0)),
                ('ended', models.BooleanField(default=False)),
                ('prize_code', models.CharField(default=b'00XX00', max_length=6)),
                ('prize_group', models.IntegerField(default=0)),
                ('prize_text', models.CharField(blank=True, max_length=50)),
                ('prize_image', models.ImageField(blank=True, upload_to=b'customer_assets')),
                ('start_week', models.IntegerField(db_index=True, default=0)),
                ('season_type', models.IntegerField(null=True)),
                ('season', models.IntegerField(null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-final_points'],
            },
        ),
        migrations.CreateModel(
            name='TournamentPlacement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.IntegerField(default=0)),
                ('pays', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TournamentSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_players', models.IntegerField(default=0)),
                ('guaranteed_payout', models.IntegerField(default=0)),
                ('description', models.TextField(default=b'')),
                ('cost', models.IntegerField(default=0)),
                ('GameID', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.CustomerProfile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='tournamentplacement',
            name='spec',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TournamentSpec'),
        ),
        migrations.AddField(
            model_name='stripecharge',
            name='threepak',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ThreePak'),
        ),
        migrations.AddField(
            model_name='stripecharge',
            name='token',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.StripeToken'),
        ),
        migrations.AddField(
            model_name='pick',
            name='threepak',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.ThreePak'),
        ),
        migrations.AddField(
            model_name='fencestate',
            name='fence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fenceStates', to='app.GEOFence'),
        ),
        migrations.AddField(
            model_name='fencestate',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fenceStates', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dfsslatemlb',
            name='DfsSlatePlayers',
            field=models.ManyToManyField(to='app.DfsSlatePlayerMLB'),
        ),
        migrations.AddField(
            model_name='customerprofile',
            name='league',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.League'),
        ),
        migrations.AddField(
            model_name='contest',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.CustomerProfile'),
        ),
        migrations.AddField(
            model_name='contest',
            name='spec',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TournamentSpec'),
        ),
        migrations.AddField(
            model_name='contest',
            name='threepaks',
            field=models.ManyToManyField(to='app.ThreePak'),
        ),
        migrations.AddField(
            model_name='boxscoremlb',
            name='Game',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.GameMLB'),
        ),
        migrations.AddField(
            model_name='boxscoremlb',
            name='Innings',
            field=models.ManyToManyField(to='app.InningMLB'),
        ),
        migrations.AddField(
            model_name='boxscoremlb',
            name='PlayerGames',
            field=models.ManyToManyField(to='app.PlayerGameMLB'),
        ),
        migrations.AddField(
            model_name='boxscoremlb',
            name='TeamGames',
            field=models.ManyToManyField(to='app.TeamGameMLB'),
        ),
    ]
